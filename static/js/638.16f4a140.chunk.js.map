{"version":3,"file":"static/js/638.16f4a140.chunk.js","mappings":"qJACA,MAAiC,gCAAjC,EAA4E,0BAA5E,EAAgH,yBAAhH,EAAwJ,8B,oBCAxJ,GAAgB,OAAS,2BAA2B,OAAS,4B,SCY7D,EAVmB,SAACA,GAChB,IAAIC,EAAI,mBAAeD,EAAME,IAE7B,OACI,gBAAKC,UAAWC,EAAAA,OAAW,IAAMA,EAAAA,OAAjC,UACI,SAAC,KAAD,CAASC,GAAIJ,EAAME,UAAc,SAAAG,GAAO,OAAIA,EAAQC,SAAWH,EAAAA,OAAWA,EAAAA,IAAlC,EAAxC,SAAoFJ,EAAMQ,QAGrG,ECVD,EAA0B,yBCO1B,EANgB,SAACR,GACb,OACI,gBAAKG,UAAWC,EAAhB,SAA4BJ,EAAMS,SAEzC,E,uCCGKC,GAAWC,EAAAA,EAAAA,GAAe,YAE1BC,GAAeC,EAAAA,EAAAA,GAAiB,KAsChCC,GAAsBC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,qBAAlBD,EAXL,SAACf,GACpB,OACI,iBAAMiB,SAAUjB,EAAMkB,aAAtB,UACI,iBAAKf,UAAWC,EAAhB,WACI,SAACe,EAAA,EAAD,CAAOC,SAAU,CAACC,EAAAA,EAAUT,GAAeU,UAAWZ,EAAUF,KAAK,iBAAiBe,YAAY,yBAClG,yCAIf,IAMD,EAtCgB,SAACvB,GAEb,IAAIwB,EAAkBxB,EAAMyB,YAAYC,QAAQC,KAAI,SAAAC,GAAE,OAAI,SAAC,EAAD,CAAwBpB,KAAMoB,EAAGpB,MAAhBoB,EAAG1B,GAAxB,IAClD2B,EAAmB7B,EAAMyB,YAAYK,SAASH,KAAI,SAAAC,GAAE,OAAI,SAAC,EAAD,CAAqBnB,QAASmB,EAAGnB,SAAnBmB,EAAG1B,GAArB,IAOxD,OACI,iBAAKC,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACKoB,KAEL,iBAAKrB,UAAWC,EAAhB,UACKyB,GACD,SAACf,EAAD,CAAqBG,SAXX,SAACc,GACnB/B,EAAMgC,YAAYD,EAAOE,eAC5B,SAaJ,E,oEChCGC,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,OADU,E,UCcjC,GAAeE,E,QAAAA,KAAQC,EAAAA,EAAAA,KAZD,SAACJ,GACnB,MAAO,CACHV,YAAaU,EAAMV,YAE1B,IAEwB,SAACe,GACtB,MAAO,CACHR,YAAa,SAACS,GAAD,OAAUD,GAASE,EAAAA,EAAAA,GAAwBD,GAA3C,EAEpB,KDR+B,SAACE,GAAe,IACtCC,EADqC,0IAEvC,WACI,OAAIC,KAAK7C,MAAMoC,QAER,SAACO,GAAD,UAAeE,KAAK7C,SAFG,SAAC,KAAD,CAAUK,GAAI,UAG/C,KANsC,GACXyC,EAAAA,WAUhC,OAFqCP,EAAAA,EAAAA,IAAQL,EAARK,CAAoCK,EAG5E,GCFD,CAAuFG,E","sources":["webpack://react-01/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://react-01/./src/components/Dialogs/DialogItem/DialogItem.module.css?beb9","components/Dialogs/DialogItem/DialogItem.jsx","webpack://react-01/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogsWrapper\":\"Dialogs_dialogsWrapper__IXDa-\",\"messages\":\"Dialogs_messages__1FNS4\",\"dialogs\":\"Dialogs_dialogs__O5GvC\",\"send_message\":\"Dialogs_send_message__qyClg\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"DialogItem_dialog__jEapk\",\"active\":\"DialogItem_active__o6prM\"};","import { NavLink } from 'react-router-dom';\r\nimport s from './DialogItem.module.css'\r\n\r\nconst DialogItem = (props) => {\r\n    let path = `/dialogs/${props.id}`\r\n\r\n    return(\r\n        <div className={s.dialog + ' ' + s.active} >\r\n            <NavLink to={path} className = { navData => navData.isActive ? s.active : s.item }>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__eYj7k\"};","import s from './Message.module.css'\r\n\r\nconst Message = (props) => {\r\n    return(\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import s from './Dialogs.module.css'\r\nimport React from 'react';\r\n\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { ElementCreator } from '../common/FormsControls/FormsControls';\r\nimport { required, maxLengthCreator } from '../../utils/validators/validators';\r\n\r\nconst Textarea = ElementCreator(\"textarea\")\r\n\r\nconst maxLength100 = maxLengthCreator(100)\r\n\r\n// import { addMessageActionCreator, updateNewMessageActionCreator } from '../../redux/dialogsReducer';\r\n\r\nconst Dialogs = (props) => {\r\n    // debugger\r\n    let dialogsElements = props.dialogsPage.dialogs.map(el => <DialogItem key={el.id} name={el.name} />)\r\n    let messagesElements = props.dialogsPage.messages.map(el => <Message key={el.id} message={el.message}/>)\r\n\r\n\r\n    const addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageText)\r\n    }\r\n    \r\n    return(\r\n        <div className={s.dialogsWrapper}>\r\n            <div className={s.dialogs}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n                <AddMessageReduxForm onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={s.send_message}>\r\n                <Field validate={[required, maxLength100]} component={Textarea} name=\"newMessageText\" placeholder=\"Enter new message: \"/>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({ form: 'DialogsNewMessage' })(AddMessageForm)\r\n\r\n\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Navigate to={'/login'} />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}","import Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { addMessageActionCreator } from '../../redux/dialogsReducer';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (text) => dispatch(addMessageActionCreator(text)),\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs);"],"names":["props","path","id","className","s","to","navData","isActive","name","message","Textarea","ElementCreator","maxLength100","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","validate","required","component","placeholder","dialogsElements","dialogsPage","dialogs","map","el","messagesElements","messages","values","sendMessage","newMessageText","mapStateToPropsForRedirect","state","isAuth","auth","compose","connect","dispatch","text","addMessageActionCreator","Component","RedirectComponent","this","React","Dialogs"],"sourceRoot":""}